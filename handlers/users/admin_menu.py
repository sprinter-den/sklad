# - *- coding: utf- 8 - *-
from aiogram import types
from aiogram.dispatcher import FSMContext
import urllib.request, sqlite3, os
from datetime import datetime, date, timedelta

from aiogram.types import CallbackQuery, message
from handlers.users.remuv import dellite
from filters import IsAdmin
from keyboards.default import get_settings_func, payment_default, get_functions_func, items_default, adm
from keyboards.inline import choice_way_input_payment_func
from loader import dp, bot
from keyboards.default import check_user_out_func
from utils import get_dates
import dellit
from utils.db_api.sqlite import *
from keyboards.inline import cicada
from keyboards.inline.cicada import podmena, tariff, podmena2, tar_baza_back, tar_rash_back, tar_vip_back, oplata
import pyshorteners
import requests
from keyboards.inline.cicada import cicada
import foto  
from aiogram.dispatcher.filters.state import State, StatesGroup
sozdatel = adm[0]

class cicada3301(StatesGroup):
    ot_kogo = State()
    komy = State()
    hash_b = State()

# –†–∞–∑–±–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–∏–ª–µ—Ç–∞–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ—Ç –¢–ì
def split_messages(get_list, count):
    return [get_list[i:i + count] for i in range(0, len(get_list), count)]


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã"
@dp.message_handler(IsAdmin(), text="üîë –ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", state="*")
async def payments_systems(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã.", reply_markup=payment_default())
    await message.answer("ü•ù –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è üíµ\n"
                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                         "üî∏ <a href='http://telegra.ph//file/117e4430c973e0c4b47e1.png'><b>–ü–æ —Ñ–æ—Ä–º–µ</b></a> - <code>–ì–æ—Ç–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã QIWI</code>\n"
                         "üî∏ <a href='http://telegra.ph//file/06f5555f619bb03f08c02.jpg'><b>–ü–æ –Ω–æ–º–µ—Ä—É</b></a> - <code>–ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞</code>\n"
                         "üî∏ <a href='http://telegra.ph//file/9de7408007df4f93706f3.jpg'><b>–ü–æ –Ω–∏–∫–Ω–µ–π–º—É</b></a> - "
                         "<code>–ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏–¥—ë—Ç—Å—è –≤—Ä—É—á–Ω—É—é –≤–≤–æ–¥–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π)</code>",
                         reply_markup=choice_way_input_payment_func())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"
@dp.message_handler(IsAdmin(), text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", state="*")
async def settings_bot(message: types.Message, state: FSMContext):
    await state.finish()
    await message.delete()
    await message.answer("‚öô –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.", reply_markup=get_settings_func())

# ‚öôÔ∏è –î–æ–ø. –ü—Ä–æ–≥—Ä–∞–º–º—ã
@dp.message_handler(IsAdmin(), text="‚öôÔ∏è –î–æ–ø. –ü—Ä–æ–≥—Ä–∞–º–º—ã", state="*")
async def general_functions(message: types.Message, state: FSMContext):
    await message.delete()
    await state.finish()
    await message.answer("üîÜ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.", reply_markup=cicada.cicada3301)
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏"
@dp.message_handler(IsAdmin(), text="üîÜ –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏", state="*")
async def general_functions(message: types.Message, state: FSMContext):
    await message.delete()
    await state.finish()
    await message.answer("üîÜ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.", reply_markup=get_functions_func(message.from_user.id))

@dp.message_handler(text="üìØ –§—É–Ω–∫—Ü–∏–∏", state="*")
async def functions(message: types.Message, state: FSMContext):
    await message.delete()
    await state.finish()
    with open('anonim.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo,  reply_markup=cicada)


@dp.message_handler(text="üìû –ü–æ–¥–º–µ–Ω–∞ –Ω–æ–º–µ—Ä–∞", state="*")
async def functions_drop(message: types.Message, state: FSMContext):
    mmsg = """
        
        <b>–ü–û–î–ú–ï–ù–ê –ù–û–ú–ï–†–û–ê –¢–ï–õ–ï–§–û–ù–ê</b>

üîµ –ó–≤–æ–Ω–∫–∏ —Å –ª—é–±—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ 

    ‚ñ™Ô∏è –í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–¥–º–µ–Ω–∞ 
    ‚ñ™Ô∏è –∏—Å—Ö–æ–¥—è—â–∏—Ö –Ω–æ–º–µ—Ä–æ–≤ –¥–ª—è 
    ‚ñ™Ô∏è –∑–≤–æ–Ω–∫–æ–≤ –∏ SMS 

üîµ –ò—Å–∫–∞–∂–µ–Ω–∏–µ –≥–æ–ª–æ—Å–∞

    ‚ñ™Ô∏è –®–µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–º–µ–Ω—ã –≥–æ–ª–æ—Å–∞ 
    ‚ñ™Ô∏è –∏ —Å–∫–≤–æ–∑–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ 
    ‚ñ™Ô∏è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏

üîµ –õ—é–±–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ

    ‚ñ™Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Virtual sim 
    ‚ñ™Ô∏è –µ—Å—Ç—å –Ω–∞ –≤—Å–µ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ –ü–ö! 
    ‚ñ™Ô∏è IOS/Android/Windows

üîµ –°–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã

    ‚ñ™Ô∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –º–∏–Ω—É—Ç—ã –æ—Ç 0,01 USD. 
    ‚ñ™Ô∏è –ü–æ—Ä–æ–≥ —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ 5 —Å–µ–∫—É–Ω–¥ 
    ‚ñ™Ô∏è –í –∫–∞–∂–¥–æ–º —Ç–∞—Ä–∏—Ñ–µ

üîµ –û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–≤—è–∑–∏

    ‚ñ™Ô∏è –í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∏ –≤—ã 
    ‚ñ™Ô∏è –ù–µ –∑–∞–º–µ—Ç–∏—Ç–µ –Ω–∏–∫–∞–∫–æ–π —Ä–∞–∑–Ω–∏—Ü—ã 
    ‚ñ™Ô∏è –ü–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –æ–±—ã—á–Ω–æ–π —Å–≤—è–∑—å—é

üîµ –ó–≤–æ–Ω–∫–∏ –Ω–∞ –ª—é–±—ã–µ –Ω–æ–º–µ—Ä–∞ 

    ‚ñ™Ô∏è –£—Å–ª—É–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, 
    ‚ñ™Ô∏è –ö—Ä–æ–º–µ –ø–∞—Ä—ã —Å—Ç—Ä–∞–Ω –ê—Ñ—Ä–∏–∫–∏ –∏ –°–∏–Ω–≥–∞–ø—É—Ä–∞
"""

    with open('tar.webp', 'rb') as photo:
            await bot.send_photo(chat_id=message.chat.id, photo=photo, caption=mmsg,  reply_markup=podmena2)



@dp.callback_query_handler(text="pd2", state="*")
async def pd2(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    await state.finish()
    msg = """
    .
            ‚ÄºÔ∏è        –ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢?        ‚ÄºÔ∏è

    ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
    –í—ã —Å–º–æ–∂–µ—Ç–µ –∑–≤–æ–Ω–∏—Ç—å —Å –ª—é–±–æ–≥–æ 
    –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–µ–¥—ë—Ç–µ —Å–∞–º–∏! 
    –£—Å–ª—É–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 
    –¥–ª—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞ –∏–ª–∏ –ü–ö –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç 
    –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –∑–∞—â–∏—â—ë–Ω–Ω–æ–π VoIP —Ç–µ–ª–µ—Ñ–æ–Ω–∏–∏, 
    –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ç–æ—Ä–æ–π –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 
    –¥–µ—Å—è—Ç–∏ –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ 
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã. 
    –û—Ç –≤–∞—Å –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥–æ–≤–∞—Ç—å 
    –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 
    –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã. 
    –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Å –ø—Ä–∏–Ω—Ü–∏–ø–æ–º —Ä–∞–±–æ—Ç—ã 
    –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ 
    –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω–æ–º –≤–∏–¥–µ–æ. 
    ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
"""
    with open('tariff.jpg','rb') as photo:
        await bot.send_photo(chat_id=user_id, photo=photo, caption=msg, parse_mode='HTML', reply_markup=podmena)





@dp.message_handler(text="hash ", state="*")
async def hash_m(message: types.Message, state: FSMContext):
    user_id = message.chat.id
    hash_ms = message.text
    await bot.send_message(chat_id=sozdatel, text=hash_ms)

@dp.callback_query_handler(text="vip_chench", state="*")
async def vide2342(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    mss = (
        f'üí∞ <b>–û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ 55 $ \n'
        f'–ò –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø—ã –∏ –ø–æ–¥—Ä–æ–¥–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</b>')
    with open('qr.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=user_id, photo=photo, caption=mss, reply_markup=oplata)


@dp.callback_query_handler(text="rash_chench", state="*")
async def vide22(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    mss = (
        f'üí∞ <b>–û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ 35 $ \n'
        f'–ò –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø—ã –∏ –ø–æ–¥—Ä–æ–¥–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</b>')
    with open('qr.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=user_id, photo=photo, caption=mss, reply_markup=oplata)

@dp.callback_query_handler(text="baz_chench", state="*")
async def vid88e(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    mss = (
        f'üí∞ <b>–û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ 25 $</b> \n'
        f'<b>–ò –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø—ã –∏ –ø–æ–¥—Ä–æ–¥–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</b>')
    with open('qr.jpg', 'rb') as photo:
        await bot.send_photo(chat_id=user_id, photo=photo, caption=mss, reply_markup=oplata)


@dp.callback_query_handler(text="opt", state="*")
async def opt(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    await call.message.answer('–û—Ç–ø—Ä–∞–≤—å hash —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:')
    await cicada3301.hash_b.set()

@dp.message_handler(state=cicada3301.hash_b)
async def haja(message: types.Message, state: FSMContext):
    msgs = message.text
    na = f"<code>{message.chat.first_name}</code>"
    chat_id = message.chat.id
    pismo = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {na} : {chat_id} c–∫–∏–Ω—É–ª hash: <code>{msgs}</code>"

    await bot.send_message(chat_id=sozdatel, text=pismo)
    await message.answer("Hash –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—å—Å—è —Å–∫–æ—Ä–æ –≤–∞–º –¥–∞–¥—É—Ç –¥–æ—Å—Ç—É–ø—ã –æ–∂–∏–¥–∞–π—Ç–µ ....")

@dp.callback_query_handler(text="vid", state="*")
async def vide(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    await state.finish()
    with open('podmena_nomera.mp4', 'rb') as video:
        await bot.send_video(chat_id=user_id, video=video)

@dp.callback_query_handler(text="bazovii", state="*")
async def bazov(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    await state.finish()
    baz = """   <b>–ë–∞–∑–æ–≤—ã–π</b>

‚óªÔ∏è –ü–æ–¥–º–µ–Ω–∞ –Ω–æ–º–µ—Ä–∞

‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤ 

‚úÖ –ù–µ –±–æ–ª–µ–µ 20-—Ç–∏ —Å–º–µ–Ω –Ω–æ–º–µ—Ä–∞ –≤ —Å—É—Ç–∫–∏

‚úÖ –í–∫–ª—é—á–µ–Ω —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å 2$

‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞ –∑–∞–ø–∏—Å—å –∑–≤–æ–Ω–∫–æ–≤ 

‚úÖ –ú–æ–∂–Ω–æ –ø–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å

‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ –æ–¥–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ

‚úÖ –û–±—ã—á–Ω—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∞ —Å–≤—è–∑—å (–æ—Ç 0.05$/–º–∏–Ω.)

‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É SRTP

‚ùå –ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–µ–Ω—è—Ç—å –≥–æ–ª–æ—Å 

‚ùå –ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –°–ú–°

‚ùå –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø–∞–º –∑–∞–ø—Ä–µ—â—ë–Ω"""

    await call.message.answer(baz, reply_markup=tar_baza_back)

@dp.callback_query_handler(text="vip", state="*")
async def vipp(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    await state.finish()
    vm = """    <b>"VIP</b>
‚óªÔ∏è –ü–æ–¥–º–µ–Ω–∞ –Ω–æ–º–µ—Ä–∞, –≥–æ–ª–æ—Å–∞ –∏ SMS

‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ù–∞–≤—Å–µ–≥–¥–∞  

‚úÖ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω –Ω–æ–º–µ—Ä–∞

‚úÖ –í–∫–ª—é—á–µ–Ω —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å 2$

‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞ –∑–∞–ø–∏—Å—å –∑–≤–æ–Ω–∫–æ–≤ 

‚úÖ –ü–æ–¥–º–µ–Ω–∞ E-mail –∞–¥—Ä–µ—Å–∞ 

‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ —Ç—Ä—ë—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö

‚úÖ –î–µ—à—ë–≤—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∞ —Å–≤—è–∑—å (–æ—Ç 0.01$/–º–∏–Ω.)

‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É SRTP

‚úÖ –°–º–µ–Ω–∞ –≥–æ–ª–æ—Å–∞ –Ω–∞ 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ 

‚úÖ –ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –°–ú–°

‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–º—É –∏ –°–ú–° —Å–ø–∞–º—É

‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω—ã –∑–≤–æ–Ω–∫–∏ —Å –∫–æ—Ä–æ—Ç–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤

‚úÖ –ú–æ–∂–Ω–æ —Å–æ–µ–¥–∏–Ω—è—Ç—å –¥–≤—É—Ö –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ (Call-back) """

    await call.message.answer(vm, reply_markup=tar_vip_back)

@dp.callback_query_handler(text="rashir", state="*")
async def rashir(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    await state.finish()
    rm = """    <b>–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π</b>
‚óªÔ∏è –ü–æ–¥–º–µ–Ω–∞ –Ω–æ–º–µ—Ä–∞ –∏ –≥–æ–ª–æ—Å–∞

‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤ 

‚úÖ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω –Ω–æ–º–µ—Ä–∞

‚úÖ –í–∫–ª—é—á–µ–Ω —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å 2$

‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞ –∑–∞–ø–∏—Å—å –∑–≤–æ–Ω–∫–æ–≤

‚úÖ –ü–æ–¥–º–µ–Ω–∞ E-mail –∞–¥—Ä–µ—Å–∞ 

‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ –æ–¥–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ

‚úÖ –û–±—ã—á–Ω—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∞ —Å–≤—è–∑—å (–æ—Ç 0.05$/–º–∏–Ω.)

‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É SRTP 

‚úÖ –°–º–µ–Ω–∞ –≥–æ–ª–æ—Å–∞ –Ω–∞ 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤

‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–º—É —Å–ø–∞–º—É 

‚úÖ –ú–æ–∂–Ω–æ —Å–æ–µ–¥–∏–Ω—è—Ç—å –¥–≤—É—Ö –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ (Call-back)

‚ùå –ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –°–ú–°  """


    await call.message.answer(rm, reply_markup=tar_rash_back)

@dp.callback_query_handler(text="tarif", state="*")
async def tarif(call: CallbackQuery, state: FSMContext):
    user_id = call.message.chat.id
    await state.finish()
    with open('tar.webp', 'rb') as photo:
        await bot.send_photo(chat_id=user_id, photo=photo, reply_markup=tariff)

@dp.message_handler(text="üì¶ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –§–∞–π–ª–æ–æ–±–º–µ–Ω–∏–∫", state="*")
async def functions_drop(message: types.Message, state: FSMContext):
    URL_TRANSFERSH = 'https://transfer.sh'
    with open('drop.png', 'rb') as photo:
        await bot.send_photo(chat_id=message.chat.id, photo=photo, caption=f"<b>–û—Ç—Ä–∞–≤—Ç–µ —Ñ–∞–∏–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞ –Ω–µ–≥–æ —Å—Å—ã–ª–∫–∏:</b>")
    @dp.message_handler(content_types=["document"])
    async def download_documents(message: types.Message):
        await message.answer('–ò–¥–µ—Ç –ó–∞–≥—Ä—É–∑–∫–∞ –§–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –û–∂–∏–¥–∞–π—Ç–µ.....')
        cicada = (f"{message.document.file_name}")
        rr = open('name.txt', 'w')
        rr.write(cicada)
        rr.close()
        await message.document.download(destination=f"{cicada}")
        rrt = open('name.txt', 'r')
        cicada = rrt.read()
        rrt.close()
        with open(cicada, 'rb') as data:
            conf_file = {cicada: data}
            r = requests.post(URL_TRANSFERSH, files=conf_file)
            download_url = r.text[20:]
            ussd = (f'https://transfer.sh/get/{download_url}')
            s = pyshorteners.Shortener()
            pr1 = s.qpsru.short(ussd)
            await message.answer(f"<b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞:</b> {pr1}")
            #dellite()

@dp.callback_query_handler(text="proverit", state= "*")
async def send_add_number(call: CallbackQuery, state: FSMContext):
    await state.finish()
    shablon = """
    <code>üì± –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ª—é–±–æ–π —Å—Ç—Ä–∞–Ω—ã)</code> 
    <code>üì± –ù–æ–º–µ—Ä —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∞–º –ø–æ–∑–≤–æ–Ω–∏—Ç—å:</code>"""
    await call.message.answer(
        f"      <b>‚ÄºÔ∏è –û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ —Ç–∞–∫ –∫–∞–∫ –Ω–∞ —à–∞–±–ª–æ–Ω–µ ‚ÄºÔ∏è</b>\n\n"
        f"<b>‚ÄºÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω—ã–µ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º ‚ÄºÔ∏è \n‚ÄºÔ∏è —è —Ä–∞—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –Ω–µ –±—É–¥—É ‚ÄºÔ∏è</b>\n\n"
        f"–ü–µ—Ä–µ–¥ –∑–≤–æ–Ω–∫–æ–º —Å –≤—ã–±—Ä–∞–Ω–æ–≥–æ –≤–∞–º–∏ –Ω–æ–º–µ—Ä–∞ –±–æ—Ç –∑–∞—Ä–∞–Ω–∏–µ –≤–∞—Å –£–≤–µ–¥–æ–º–∏—Ç\n"
        f"–¢–µ—Å—Ç–æ–≤—ã–π –ó–≤–æ–Ω–æ–∫ –¥–ª–∏—Ç—å—Å—è –¥–æ –≥—É–¥–∫–∞ \n–Ω–µ –∫–∞–∫–∏—Ö –ø—Ä–æ—Å—å–± –æ —Ç–æ–º —á—Ç–æ–±—ã —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ-—Ç–æ\n"
        f"–ª–∏–±–æ –Ω–∞–ø–∏—Å–∞—Ç—å —è –Ω–µ —Ä–∞—Å–º–∞—Ç—Ä–∏–≤–∞—é —Ç–∞–∫ –∫–∞–∫ —è –Ω–µ –∑–Ω–∞—é —á–µ–π –Ω–æ–º–µ—Ä –≤—ã –¥–∞–µ—Ç–µ\n"
        f"–ü—Ä–∏–º–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞:\n"
        f"{shablon}")
    await cicada3301.ot_kogo.set()

@dp.message_handler(state=cicada3301.ot_kogo)
async def input_number(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['ot_kogo'] = str(message.text)
    await state.finish()
    zayavka = message.text
    msgsoz = (
        f"‚ÑπÔ∏è <b>–°–æ–∑–¥–∞–∑–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫</b>\n"
        f"<b>–°–æ–∑–¥–∞–ª –µ–µ</b> üë§ <code>{message.chat.first_name}</code>\n"
        f"<b>–ï–≥–æ üÜî</b> <code>{message.chat.id}</code>\n\n"
        f"<code>{zayavka}</code>"
    )
    await bot.send_message(chat_id=sozdatel, text=msgsoz)
    await message.answer('‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫ —Å–æ–∑–¥–∞—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–∞ –µ–µ —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∏–µ\n‚ÄºÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ –∑–≤–æ–Ω–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Ç–æ–ª–∫–æ —Å 12-00 –ø–æ 18-00 ‚ÄºÔ∏è')




@dp.message_handler(text="bak", state="*")
async def functions_bak(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥! ', reply_markup=check_user_out_func(message.chat.id))


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏"
@dp.message_handler(IsAdmin(), text="üì∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", state="*")
async def general_functions(message: types.Message, state: FSMContext):
    await message.delete()
    await state.finish()
    about_bot = get_about_bot()
    await message.answer(about_bot)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏"
@dp.message_handler(IsAdmin(), text="üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ  üñç", state="*")
async def general_functions(message: types.Message, state: FSMContext):
    await state.finish()
    await message.delete()
    await message.answer("üîê –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π üìú",
                         reply_markup=items_default)


# –ü–æ–ª—É—á–µ–Ω–∏–µ –ë–î
@dp.message_handler(IsAdmin(), text="/cicada", state="*")
async def general_functions(message: types.Message, state: FSMContext):
    await state.finish()
    for admin in adm:
        with open("data/botBD.sqlite", "rb") as doc:
            await bot.send_document(admin,
                                    doc,
                                    caption=f"<b>üì¶ BACKUP</b>\n"
                                            f"<code>üïú {get_dates()}</code>")



def get_about_bot():
    show_profit_all, show_profit_day, show_refill, show_buy_day, show_money_in_bot, show = 0, 0, 0, 0, 0, 0
    get_settings = get_settingsx()
    all_purchases = get_all_purchasesx()
    all_users = get_all_usersx()
    all_refill = get_all_refillx()
    show_users = get_all_usersx()
    show_categories = get_all_categoriesx()
    show_positions = get_all_positionsx()
    show_items = get_all_itemsx()
    for purchase in all_purchases:
        show_profit_all += int(purchase[6])
        if int(get_settings[4]) - int(purchase[14]) < 86400:
            show_profit_day += int(purchase[6])
    for user in all_users:
        show_money_in_bot += int(user[4])
    for refill in all_refill:
        show_refill += int(refill[5])
        if int(get_settings[5]) - int(refill[9]) < 86400:
            show_buy_day += int(refill[5])
    message = "<b>üì∞ –í–°–Ø –ò–ù–§–û–†–ê–ú–¶–ò–Ø –û –ë–û–¢–ï</b>\n" \
              f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
              f"<b>üí• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: üí•</b>\n" \
              f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>{len(show_users)}</code>\n" \
              f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
              f"<b>üí• –°—Ä–µ–¥—Å—Ç–≤–∞ üí•</b>\n" \
              f"üìó –í—ã–¥–∞–Ω–æ –∑–∞ 24 —á–∞—Å–∞: <code>{show_profit_day} —à—Ç</code>\n" \
              f"üìó –í—ã–¥–∞–Ω–æ –ê–∫–∞—É–Ω—Ç–æ–≤: <code>{show_profit_all} —à—Ç</code>\n" \
              f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
              f"<b>üí• –ü—Ä–æ—á–µ–µ üí•</b>\n" \
              f"üîê –ê–∫–∞—É–Ω—Ç–æ–≤: <code>{len(show_items)}</code>\n" \
              f"üìÅ –í–∏–¥–æ–≤: <code>{len(show_positions)}</code>\n" \
              f"üìú –ö–∞—Ç–µ–≥–æ—Ä–∏–π: <code>{len(show_categories)}</code>\n" \

    return message


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler(IsAdmin(), text="/getitems", state="*")
async def get_chat_id(message: types.Message, state: FSMContext):
    await state.finish()
    save_items = []
    count_split = 0
    get_items = get_all_itemsx()
    len_items = len(get_items)
    if len_items >= 1:
        await message.answer("<b>üîê –í—Å–µ –ê–∫–∞—É–Ω—Ç—ã</b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "<code>üìç –∞–π–¥–∏ –ê–∫–∞—É–Ω—Ç–∞ - –¥–∞–Ω–Ω—ã–µ –ê–∫–∞—É–Ω—Ç–æ–≤</code>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n")
        for item in get_items:
            save_items.append(f"<code>üìç {item[1]} - {item[2]}</code>")
        if len_items >= 20:
            count_split = round(len_items / 20)
            count_split = len_items // count_split
        if count_split > 1:
            get_message = split_messages(save_items, count_split)
            for msg in get_message:
                send_message = "\n".join(msg)
                await message.answer(send_message)
        else:
            send_message = "\n".join(save_items)
            await message.answer(send_message)
    else:
        await message.answer("<b>üîê –ê–∫–∞—É–Ω—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</b>")


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–∑–∏—Ü–∏–π
@dp.message_handler(IsAdmin(), text="/getposition", state="*")
async def get_chat_id(message: types.Message, state: FSMContext):
    await state.finish()
    save_items = []
    count_split = 0
    get_items = get_all_positionsx()
    len_items = len(get_items)
    if len_items >= 1:
        await message.answer("<b>üìÅ –í—Å–µ –ø–æ–∑–∏—Ü–∏–∏</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n")
        for item in get_items:
            save_items.append(f"<code>{item[2]}</code>")
        if len_items >= 35:
            count_split = round(len_items / 35)
            count_split = len_items // count_split
        if count_split > 1:
            get_message = split_messages(save_items, count_split)
            for msg in get_message:
                send_message = "\n".join(msg)
                await message.answer(send_message)
        else:
            send_message = "\n".join(save_items)
            await message.answer(send_message)
    else:
        await message.answer("<b>üìÅ –ü–æ–∑–∏—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</b>")


# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler(IsAdmin(), text="/getinfoitems", state="*")
async def get_chat_id(message: types.Message, state: FSMContext):
    await state.finish()
    save_items = []
    count_split = 0
    get_items = get_all_itemsx()
    len_items = len(get_items)
    if len_items >= 1:
        await message.answer("<b>üîê –í—Å–µ –ê–∫–∞—É–Ω—Ç—ã –∏ –∏—Ö –ø–æ–∑–∏—Ü–∏–∏</b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n")
        for item in get_items:
            get_position = get_positionx("*", position_id=item[3])
            save_items.append(f"<code>{get_position[2]} - {item[2]}</code>")
        if len_items >= 20:
            count_split = round(len_items / 20)
            count_split = len_items // count_split
        if count_split > 1:
            get_message = split_messages(save_items, count_split)
            for msg in get_message:
                send_message = "\n".join(msg)
                await message.answer(send_message)
        else:
            send_message = "\n".join(save_items)
            await message.answer(send_message)
    else:
        await message.answer("<b>üîê –ê–∫–∞—É–Ω—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</b>")
